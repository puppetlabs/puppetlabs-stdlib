# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
#
# deep_merge.rb
#
# ---- original file header ----
#
# @summary
#       @summary
#      Recursively merges two or more hashes together and returns the resulting hash.
#
#    @example Example usage
#
#      $hash1 = {'one' => 1, 'two' => 2, 'three' => { 'four' => 4 } }
#      $hash2 = {'two' => 'dos', 'three' => { 'five' => 5 } }
#      $merged_hash = deep_merge($hash1, $hash2)
#
#      The resulting hash is equivalent to:
#
#      $merged_hash = { 'one' => 1, 'two' => 'dos', 'three' => { 'four' => 4, 'five' => 5 } }
#
#      When there is a duplicate key that is a hash, they are recursively merged.
#      When there is a duplicate key that is not a hash, the key in the rightmost hash will "win."
#
#    @return [Hash] The merged hash
#
#
Puppet::Functions.create_function(:'stdlib::deep_merge') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    if args.length < 2
      raise Puppet::ParseError, "deep_merge(): wrong number of arguments (#{args.length}; must be at least 2)"
    end

    deep_merge = proc do |hash1, hash2|
      hash1.merge(hash2) do |_key, old_value, new_value|
        if old_value.is_a?(Hash) && new_value.is_a?(Hash)
          deep_merge.call(old_value, new_value)
        else
          new_value
        end
      end
    end

    result = {}
    args.each do |arg|
      next if arg.is_a?(String) && arg.empty? # empty string is synonym for puppet's undef
      # If the argument was not a hash, skip it.
      unless arg.is_a?(Hash)
        raise Puppet::ParseError, "deep_merge: unexpected argument type #{arg.class}, only expects hash arguments"
      end

      result = deep_merge.call(result, arg)
    end
    return(result)
  
  end
end
