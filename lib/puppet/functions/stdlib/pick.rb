# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
#
# pick.rb
#
# ---- original file header ----
#
# @summary
#       @summary
#      This function is similar to a coalesce function in SQL in that it will return
#      the first value in a list of values that is not undefined or an empty string.
#
#    @return
#      the first value in a list of values that is not undefined or an empty string.
#
#    Typically, this function is used to check for a value in the Puppet
#    Dashboard/Enterprise Console, and failover to a default value like the following:
#
#    ```$real_jenkins_version = pick($::jenkins_version, '1.449')```
#
#    > *Note:*
#      The value of $real_jenkins_version will first look for a top-scope variable
#      called 'jenkins_version' (note that parameters set in the Puppet Dashboard/
#      Enterprise Console are brought into Puppet as top-scope variables), and,
#      failing that, will use a default value of 1.449.
#
#
Puppet::Functions.create_function(:'stdlib::pick') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    args = args.compact
    args.delete(:undef)
    args.delete(:undefined)
    args.delete('')
    raise Puppet::ParseError, 'pick(): must receive at least one non empty value' if args[0].to_s.empty?
    return args[0]
  
  end
end
